version: '3.8'

services:
  # ================================
  # ORACLE DATABASE
  # ================================

  vortex-db:
    image: container-registry.oracle.com/database/enterprise:latest
    hostname: oracle-db
    container_name: vortex-db
    environment:
      ORACLE_SID: ORCLCDB
      ORACLE_PDB: ORCLPDB1
      ORACLE_PWD: Oracle_1234
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - oracle-backup:/opt/oracle/backup
      - ../oracle/init:/opt/oracle/scripts/startup
    networks:
      - vortex-network
    healthcheck:
      test: ["CMD", "lsnrctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    restart: unless-stopped

  # ================================
  # RABBITMQ MESSAGE BROKER
  # ================================

  vortex-rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    container_name: vortex-rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: vortex
      RABBITMQ_DEFAULT_PASS: vortex123
      RABBITMQ_DEFAULT_VHOST: vortex-vhost
      # Configurações para produção
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,error},{default,info}] disk_free_limit 2147483648"
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: 0.6
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
    networks:
      - vortex-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # ================================
  # BACKEND APPLICATION
  # ================================

  vortex-app:
    build: 
      context: ../..
      dockerfile: infra/docker/Dockerfile.backend
    container_name: vortex-app
    depends_on:
      vortex-db:
        condition: service_healthy
      vortex-rabbitmq:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prd,rabbitmq}
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@vortex-db:1521:XE
      SPRING_DATASOURCE_USERNAME: system
      SPRING_DATASOURCE_PASSWORD: vortex123
      
      # Configurações do Message Broker
      MESSAGE_BROKER_TYPE: rabbitmq
      RABBITMQ_ENABLED: ${RABBITMQ_ENABLED:-true}
      KAFKA_ENABLED: false
      
      # Configurações do RabbitMQ
      SPRING_RABBITMQ_HOST: vortex-rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: vortex
      SPRING_RABBITMQ_PASSWORD: vortex123
      SPRING_RABBITMQ_VIRTUAL_HOST: vortex-vhost
      
      # Configurações de logging
      LOGGING_LEVEL_BR_COM_VORTEX: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_AMQP: INFO
      LOGGING_LEVEL_ROOT: INFO
    ports:
      - "8081:8080"
    networks:
      - vortex-network
    volumes:
              - ../../backend/vortex-application-service/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ================================
  # FRONTEND APPLICATION
  # ================================
  
  vortex-frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: vortex-frontend
    depends_on:
      vortex-app:
        condition: service_healthy
    environment:
      VITE_API_BASE_URL: http://localhost:8081
    ports:
      - "3000:3000"
    networks:
      - vortex-network
    restart: unless-stopped

# ================================
# VOLUMES
# ================================

volumes:
  oracle-data:
    driver: local
  oracle-backup:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local

# ================================
# NETWORKS
# ================================

networks:
  vortex-network:
    driver: bridge
    name: vortex-network 